# ========================================
# Rules for STEP4
# Call broad and narrow peaks with Macs2.1
# 
# TODO write rules for HOTSPOT: 
# https://github.com/rthurman/hotspot/tree/master/hotspot-distr
# ========================================
wildcard_constraints:
    peak = 'broadPeak|gappedPeak' # narrow has its own rule

# NOTE: This uniform control is necessary for DNase-seq.
# Assumes equal strand distribution, makes approx NREADS uniformly distr.
rule tagAlign_make_uniform_map_control:
    input: genome = config.CHROMSIZES, map = MAPPABLE
    output: control = "{filedir}/WCE/tagAlign/Uniform_BKG_CONTROL" + str(RLEN) + "_" + str(NREADS) + ".tagAlign.gz"
    params: bin = config.BINDIR, nreads = NREADS, rlen = RLEN, seed = 1414
    message: "== Creating uniform background of {params.nreads} for {input.map} =="
    shell: "{params.bin}/make_uniform_control.sh {params.rlen} {params.nreads} {params.seed}"

# TODO SET DATE AS ORIGINAL DATE
rule macs_gunzip_control:
    input: CTRL_DIR + "/tagAlign/{prefix}.tagAlign.gz"
    output: temp(TMPDIR + "/WCE_{prefix}.tagAlign")
    message: "== Making temporary uncompressed file {wildcards.prefix} for peak calling =="
    shell: """
    zcat {input} > {output}
    touch -a -m -t "$(date -r {input} "+%Y%m%d%H%M.%S")" {output}
    """
    # touch -d "$(date -R -r {input}) + 1 minute" {output}  # Is a worse option

rule macs_gunzip_TA:
    input: EPDIR + "/tagAlign/{prefix}.tagAlign.gz"
    output: temp(TMPDIR + "/TA_{prefix}.tagAlign")
    message: "== Making temporary uncompressed file {wildcards.prefix} for peak calling =="
    shell: "zcat {input} > {output}"

# TODO Make rule to run model if fraglen missing, using extsize 73
rule narrowPeak_macs_call:
    input:
        TA = TMPDIR+"/TA_{TAprefix}.tagAlign",
        control = TMPDIR+"/WCE_{CTprefix}.tagAlign",
        fraglen= EPDIR+"/qc/{TAprefix}.cc.qc"
    output: temp(EPDIR+"/peaks/{TAprefix}_VS_{CTprefix}_peaks.narrowPeak")
    params: genomesize = config.GENOMESIZE, p_thresh = '1e-2', env = config.MACS_ENV,
        pkpref = EPDIR+"/peaks/{TAprefix}_VS_{CTprefix}"
    message: "== Call narrow peaks {input.TA} vs. {input.control} =="
    run:
        shell("{params.env}; macs2 callpeak -t {input.TA} -c {input.control} -f BED -n {params.pkpref} -g {params.genomesize} -p {params.p_thresh} --nomodel --extsize " + str(config.get_fraglen(input.fraglen)))
        shell("rm -f {params.pkpref}_peaks.xls {params.pkpref}_summits.bed")

rule broadPeak_macs_call:
    input:
        TA = TMPDIR + "/TA_{TAprefix}.tagAlign",
        control = TMPDIR + "/WCE_{CTprefix}.tagAlign",
        fraglen= EPDIR+"/qc/{TAprefix}.cc.qc"
    output: temp(EPDIR+"/peaks/{TAprefix}_VS_{CTprefix}.broad_peaks.broadPeak"),
        temp(EPDIR+"/peaks/{TAprefix}_VS_{CTprefix}.broad_peaks.gappedPeak")
    params: genomesize = config.GENOMESIZE, p_thresh = '1e-2', env = config.MACS_ENV,
        pkpref = EPDIR+"/peaks/{TAprefix}_VS_{CTprefix}.broad"
    message: "== Call broad and gapped peaks {input.TA} vs. {input.control} =="
    run:
        shell("{params.env}; macs2 callpeak -t {input.TA} -c {input.control} -f BED -n {params.pkpref} -g {params.genomesize} -p {params.p_thresh} --broad --nomodel --extsize " + str(config.get_fraglen(input.fraglen)))
        shell("rm -f {params.pkpref}_peaks.xls {params.pkpref}_summits.bed")

rule narrowPeak_addRank:
    input: "{filedir}/peaks/{prefix}_peaks.narrowPeak"
    output: "{filedir}/peaks/{prefix}.narrowPeak.gz"
    params: bin = config.BINDIR
    message: "-- Add rank and gzip narrow peak file --"
    shell: "{params.bin}/addRank2NarrowPeakFile.sh {input} 8 | gzip -c > {output}"

rule peak_gzip:
    input: "{filedir}/peaks/{prefix}.broad_peaks.{peak}"
    output: "{filedir}/peaks/{prefix}.{peak}.gz"
    message: "-- Compress and separate {wildcards.peak} file --"
    shell: "gzip -c {input} > {output}"
